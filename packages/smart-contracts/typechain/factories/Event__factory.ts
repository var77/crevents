/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Event, EventInterface } from "../Event";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maxParticipants",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "registrationEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preSaleTicketPrice",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "link",
            type: "string",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
        ],
        internalType: "struct Utils.EventStruct",
        name: "eventData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenUri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressNotWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyCheckedIn",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "CheckInNotAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "EventAlreadyStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSeatsAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "NotModerator",
    type: "error",
  },
  {
    inputs: [],
    name: "NotRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ProvideRequiredArguments",
    type: "error",
  },
  {
    inputs: [],
    name: "RegistrationClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ValueNotEnough",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "participant",
        type: "address",
      },
    ],
    name: "ParticipantChecked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "participant",
        type: "address",
      },
    ],
    name: "ParticipantRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "addModerator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_registrationEnd",
        type: "uint256",
      },
    ],
    name: "changeEventDates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "string",
        name: "_link",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_maxParticipants",
        type: "uint256",
      },
    ],
    name: "changeEventInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ticketPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_preSalePrice",
        type: "uint256",
      },
    ],
    name: "changeTicketPrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "rootHash",
        type: "bytes32",
      },
    ],
    name: "changeWhitelistRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "participant",
        type: "address",
      },
    ],
    name: "checkIn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkedParticipantCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "checkedParticipants",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "end",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currTimestamp",
        type: "uint256",
      },
    ],
    name: "getEventInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "address",
            name: "organizer",
            type: "address",
          },
          {
            internalType: "bool",
            name: "registrationOpen",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "onlyWhitelistRegistration",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isRegistered",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isChecked",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "maxParticipants",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "registrationEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preSaleTicketPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "registeredParticipantCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "checkedParticipantCount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "link",
            type: "string",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
        ],
        internalType: "struct Utils.EventInfoStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currTimestamp",
        type: "uint256",
      },
    ],
    name: "getRegistrationOpen",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "image",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "link",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxParticipants",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "moderators",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "onlyWhitelistRegistration",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "parentContractAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "parentContractFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "participants",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "preSaleTicketPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicRegister",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "registeredParticipantCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registrationEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registrationOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_isOpen",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "_onlyWhitelist",
        type: "bool",
      },
    ],
    name: "toggleRegistration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenUri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "verifyTicket",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "whitelistRegister",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526007805461ff0019166101001790557f16d95910a21726a3e7b59a8c6166b355396434419809cb902e2063555b8d60de6011553480156200004457600080fd5b506040516200297e3803806200297e833981016040819052620000679162000404565b60c084015160408051808201909152600381526222ab2760e91b60208201526200009133620001b4565b60036200009f838262000603565b506004620000ae828262000603565b5060018055505060408401511580620000c957506060840151155b15620000e857604051630968678160e11b815260040160405180910390fd5b60e0840151601290620000fc908262000603565b5061010084015160139062000112908262000603565b50601462000121828262000603565b5061012084015160159062000137908262000603565b5083516008556040840151600a556060840151600b556080840151600e5560a0840151600f5560208401516000036200017857604084015160095562000181565b60208401516009555b6007805462010000600160b01b0319163362010000021790556010829055620001aa8362000204565b50505050620006cf565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6200020e62000287565b6001600160a01b038116620002795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6200028481620001b4565b50565b6000546001600160a01b03163314620002e35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000270565b565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715620003215762000321620002e5565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620003525762000352620002e5565b604052919050565b600082601f8301126200036c57600080fd5b81516001600160401b03811115620003885762000388620002e5565b60206200039e601f8301601f1916820162000327565b8281528582848701011115620003b357600080fd5b60005b83811015620003d3578581018301518282018401528201620003b6565b506000928101909101919091529392505050565b80516001600160a01b0381168114620003ff57600080fd5b919050565b600080600080608085870312156200041b57600080fd5b84516001600160401b03808211156200043357600080fd5b9086019061014082890312156200044957600080fd5b62000453620002fb565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c0830151828111156200049c57600080fd5b620004aa8a8286016200035a565b60c08301525060e083015182811115620004c357600080fd5b620004d18a8286016200035a565b60e0830152506101008084015183811115620004ec57600080fd5b620004fa8b8287016200035a565b82840152505061012080840151838111156200051557600080fd5b620005238b8287016200035a565b828401525050809650506200053b60208801620003e7565b94506040870151935060608701519150808211156200055957600080fd5b5062000568878288016200035a565b91505092959194509250565b600181811c908216806200058957607f821691505b602082108103620005aa57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620005fe57600081815260208120601f850160051c81016020861015620005d95750805b601f850160051c820191505b81811015620005fa57828155600101620005e5565b5050505b505050565b81516001600160401b038111156200061f576200061f620002e5565b620006378162000630845462000574565b84620005b0565b602080601f8311600181146200066f5760008415620006565750858301515b600019600386901b1c1916600185901b178555620005fa565b600085815260208120601f198616915b82811015620006a0578886015182559484019460019091019084016200067f565b5085821015620006bf5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61229f80620006df6000396000f3fe6080604052600436106102db5760003560e01c8063736f88cd11610184578063c4625ba3116100d6578063ead121111161008a578063f34094a711610064578063f34094a7146107be578063f3ccaac0146107c6578063fe1e2f51146107db57600080fd5b8063ead1211114610756578063efbe1c1c14610788578063f2fde38b1461079e57600080fd5b8063c7cac600116100bb578063c7cac600146106fc578063c87b56dd14610716578063d9a59e331461073657600080fd5b8063c4625ba3146106c6578063c6a7cbc9146106dc57600080fd5b80638da5cb5b11610138578063be9a655511610112578063be9a65551461067d578063bffa312314610693578063c025e686146106b357600080fd5b80638da5cb5b1461062a57806392cc6a681461064857806395d89b411461066857600080fd5b80637fd34e92116101695780637fd34e92146105ce5780638121e42d146105ee5780638818ed381461060457600080fd5b8063736f88cd146105995780637de33aec146105b857600080fd5b80631d645b121161023d5780633ccfd60b116101f157806370a08231116101cb57806370a082311461054f578063715018a61461056f5780637284e4161461058457600080fd5b80633ccfd60b146104e25780636352211e146104f75780636c9de4ef1461052f57600080fd5b8063336df10611610222578063336df10614610495578063355e0c5d146104b7578063386bfc98146104cc57600080fd5b80631d645b121461045257806324924bf71461047f57600080fd5b806313446a7511610294578063158c613411610279578063158c6134146103e757806318160ddd146104205780631c4695f41461043d57600080fd5b806313446a75146103a157806314d0f1ba146103b757600080fd5b806306fdde03116102c557806306fdde031461033957806309e69ede1461035b5780631209b1f61461038b57600080fd5b8062f4494f146102e057806301ffc9a714610309575b600080fd5b3480156102ec57600080fd5b506102f660105481565b6040519081526020015b60405180910390f35b34801561031557600080fd5b50610329610324366004611bdb565b61080b565b6040519015158152602001610300565b34801561034557600080fd5b5061034e6108a8565b6040516103009190611c3e565b34801561036757600080fd5b50610329610376366004611c6d565b60166020526000908152604090205460ff1681565b34801561039757600080fd5b506102f6600e5481565b3480156103ad57600080fd5b506102f660095481565b3480156103c357600080fd5b506103296103d2366004611c6d565b60186020526000908152604090205460ff1681565b3480156103f357600080fd5b50610329610402366004611c6d565b6001600160a01b031660009081526016602052604090205460ff1690565b34801561042c57600080fd5b5060025460015403600019016102f6565b34801561044957600080fd5b5061034e61093a565b34801561045e57600080fd5b5061047261046d366004611c88565b6109c8565b6040516103009190611ca1565b34801561048b57600080fd5b506102f660085481565b3480156104a157600080fd5b506104b56104b0366004611e0c565b610d80565b005b3480156104c357600080fd5b5061034e610db3565b3480156104d857600080fd5b506102f660115481565b3480156104ee57600080fd5b506104b5610dc0565b34801561050357600080fd5b50610517610512366004611c88565b610f34565b6040516001600160a01b039091168152602001610300565b34801561053b57600080fd5b506104b561054a366004611e3f565b610f3f565b34801561055b57600080fd5b506102f661056a366004611c6d565b610f6a565b34801561057b57600080fd5b506104b5610fd2565b34801561059057600080fd5b5061034e610fe6565b3480156105a557600080fd5b5060075461032990610100900460ff1681565b3480156105c457600080fd5b506102f6600d5481565b3480156105da57600080fd5b506104b56105e9366004611e5b565b610ff3565b3480156105fa57600080fd5b506102f6600f5481565b34801561061057600080fd5b50600754610517906201000090046001600160a01b031681565b34801561063657600080fd5b506000546001600160a01b0316610517565b34801561065457600080fd5b506104b5610663366004611f20565b611006565b34801561067457600080fd5b5061034e61102f565b34801561068957600080fd5b506102f6600a5481565b34801561069f57600080fd5b506104b56106ae366004611f8d565b61103e565b6104b56106c1366004611fb9565b611054565b3480156106d257600080fd5b506102f6600c5481565b3480156106e857600080fd5b506104b56106f7366004611c88565b6111bf565b34801561070857600080fd5b506007546103299060ff1681565b34801561072257600080fd5b5061034e610731366004611c88565b6111cc565b34801561074257600080fd5b506104b5610751366004611c6d565b61129f565b34801561076257600080fd5b50610776610771366004611c88565b61146e565b60405160ff9091168152602001610300565b34801561079457600080fd5b506102f6600b5481565b3480156107aa57600080fd5b506104b56107b9366004611c6d565b6114f1565b6104b5611586565b3480156107d257600080fd5b5061034e611673565b3480156107e757600080fd5b506103296107f6366004611c6d565b60176020526000908152604090205460ff1681565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316148061086e57507f80ac58cd000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b806108a257507f5b5e139f000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6060600380546108b79061202e565b80601f01602080910402602001604051908101604052809291908181526020018280546108e39061202e565b80156109305780601f1061090557610100808354040283529160200191610930565b820191906000526020600020905b81548152906001019060200180831161091357829003601f168201915b5050505050905090565b601380546109479061202e565b80601f01602080910402602001604051908101604052809291908181526020018280546109739061202e565b80156109c05780601f10610995576101008083540402835291602001916109c0565b820191906000526020600020905b8154815290600101906020018083116109a357829003601f168201915b505050505081565b610a7060405180610240016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000151581526020016000151581526020016000151581526020016000151581526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001606081526020016060815260200160608152602001606081525090565b610b1860405180610240016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000151581526020016000151581526020016000151581526020016000151581526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001606081526020016060815260200160608152602001606081525090565b600a54610100820152600b5461012082015260095460e0820152610b3a6108a8565b6101c082015260128054610b4d9061202e565b80601f0160208091040260200160405190810160405280929190818152602001828054610b799061202e565b8015610bc65780601f10610b9b57610100808354040283529160200191610bc6565b820191906000526020600020905b815481529060010190602001808311610ba957829003601f168201915b50505050506101e082015260085460c0820152600e54610140820152600f5461016082015260138054610bf89061202e565b80601f0160208091040260200160405190810160405280929190818152602001828054610c249061202e565b8015610c715780601f10610c4657610100808354040283529160200191610c71565b820191906000526020600020905b815481529060010190602001808311610c5457829003601f168201915b505050505081610200018190525060158054610c8c9061202e565b80601f0160208091040260200160405190810160405280929190818152602001828054610cb89061202e565b8015610d055780601f10610cda57610100808354040283529160200191610d05565b820191906000526020600020905b815481529060010190602001808311610ce857829003601f168201915b50505050506102208201526000546001600160a01b03166020820152610d2a8361146e565b60ff9081161560408084019190915233600081815260166020908152838220548516151560808701529181526017909152205416151560a0820152600c54610180820152600d546101a082015230815292915050565b610d88611680565b6001600160a01b03919091166000908152601860205260409020805460ff1916911515919091179055565b601480546109479061202e565b610dc8611680565b476000819003610deb576040516312171d8360e31b815260040160405180910390fd5b601054600190600090610dff90606461207e565b60105490915015610ea857600760029054906101000a90046001600160a01b03166001600160a01b0316606484601054610e399190612091565b610e4391906120a8565b604051600081818185875af1925050503d8060008114610e7f576040519150601f19603f3d011682016040523d82523d6000602084013e610e84565b606091505b50508092505081610ea8576040516312171d8360e31b815260040160405180910390fd5b6000546001600160a01b03166064610ec08584612091565b610eca91906120a8565b604051600081818185875af1925050503d8060008114610f06576040519150601f19603f3d011682016040523d82523d6000602084013e610f0b565b606091505b50508092505081610f2f576040516312171d8360e31b815260040160405180910390fd5b505050565b60006108a2826116da565b610f47611680565b6007805461ffff19166101009315159390930260ff191692909217901515179055565b60006001600160a01b038216610fac576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506001600160a01b031660009081526006602052604090205467ffffffffffffffff1690565b610fda611680565b610fe46000611769565b565b601280546109479061202e565b610ffb611680565b600e91909155600f55565b61100e611680565b601261101a8482612118565b5060136110278382612118565b506008555050565b6060600480546108b79061202e565b611046611680565b600a92909255600b55600955565b600061105f4261146e565b90508060ff166001036110855760405163a8ab2d2560e01b815260040160405180910390fd5b8060ff166002036110a957604051632fc209f360e01b815260040160405180910390fd5b8060ff166003036110cd57604051630ea075bf60e21b815260040160405180910390fd5b8060ff166004036110f157604051632437ffe960e11b815260040160405180910390fd5b60075460ff1615806111755750611173838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506011546040516bffffffffffffffffffffffff193360601b1660208201529092506034019050604051602081830303815290604052805190602001206117d1565b155b156111935760405163ad7acb4760e01b815260040160405180910390fd5b600f543410156111b657604051633c89335b60e11b815260040160405180910390fd5b610f2f336117e7565b6111c7611680565b601155565b60606111d782611870565b61120d576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6014805461121a9061202e565b80601f01602080910402602001604051908101604052809291908181526020018280546112469061202e565b80156112935780601f1061126857610100808354040283529160200191611293565b820191906000526020600020905b81548152906001019060200180831161127657829003601f168201915b50505050509050919050565b6000546001600160a01b031633148015906112ca57503360009081526018602052604090205460ff16155b15611301576040517feaa45d6a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a5442908110806113145750600b5481115b1561134b576040517f91e3be3900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03821660009081526016602052604090205460ff1661139d576040517faba4733900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03821660009081526017602052604090205460ff16156113f0576040517fc98289f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0382166000908152601760205260408120805460ff19166001908117909155600d8054919290916114299084906121d8565b90915550506040516001600160a01b03831681527fcbf477e63735f8d27f9b668165862d7c6e84e5650edec70229523db18c2f1efd9060200160405180910390a15050565b6000600a5482111561148257506001919050565b600754610100900460ff16158061149a575060095482115b156114a757506002919050565b3360009081526016602052604090205460ff16156114c757506003919050565b60006008541180156114dc5750600854600c54145b156114e957506004919050565b506000919050565b6114f9611680565b6001600160a01b03811661157a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61158381611769565b50565b60006115914261146e565b90508060ff166001036115b75760405163a8ab2d2560e01b815260040160405180910390fd5b8060ff166002036115db57604051632fc209f360e01b815260040160405180910390fd5b8060ff166003036115ff57604051630ea075bf60e21b815260040160405180910390fd5b8060ff1660040361162357604051632437ffe960e11b815260040160405180910390fd5b60075460ff16156116475760405163ad7acb4760e01b815260040160405180910390fd5b600e5434101561166a57604051633c89335b60e11b815260040160405180910390fd5b611583336117e7565b601580546109479061202e565b6000546001600160a01b03163314610fe45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611571565b60008180600111611737576001548110156117375760008181526005602052604081205490600160e01b82169003611735575b8060000361172e57506000190160008181526005602052604090205461170d565b9392505050565b505b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000826117de85846118a5565b14949350505050565b6001600160a01b0381166000908152601660205260408120805460ff19166001908117909155600c8054919290916118209084906121d8565b9091555061183190508160016118f2565b6040516001600160a01b03821681527fe11711cd714e06fbbbea301a8e90822f2f2ea4808e37e3adf06038f33c53ff279060200160405180910390a150565b600081600111158015611884575060015482105b80156108a2575050600090815260056020526040902054600160e01b161590565b600081815b84518110156118ea576118d6828683815181106118c9576118c96121eb565b6020026020010151611910565b9150806118e281612201565b9150506118aa565b509392505050565b61190c82826040518060200160405280600081525061193c565b5050565b600081831061192c57600082815260208490526040902061172e565b5060009182526020526040902090565b61194683836119a9565b6001600160a01b0383163b15610f2f576001548281035b6119706000868380600101945086611ada565b61198d576040516368d2bf6b60e11b815260040160405180910390fd5b81811061195d5781600154146119a257600080fd5b5050505050565b60015460008290036119e7576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03831660008181526006602090815260408083208054680100000000000000018802019055848352600590915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b818114611a9657808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600101611a5e565b5081600003611ad1576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015550505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611b0f90339089908890889060040161221a565b6020604051808303816000875af1925050508015611b4a575060408051601f3d908101601f19168201909252611b479181019061224c565b60015b611ba8573d808015611b78576040519150601f19603f3d011682016040523d82523d6000602084013e611b7d565b606091505b508051600003611ba0576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b6001600160e01b03198116811461158357600080fd5b600060208284031215611bed57600080fd5b813561172e81611bc5565b6000815180845260005b81811015611c1e57602081850181015186830182015201611c02565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061172e6020830184611bf8565b80356001600160a01b0381168114611c6857600080fd5b919050565b600060208284031215611c7f57600080fd5b61172e82611c51565b600060208284031215611c9a57600080fd5b5035919050565b60208152611cbb6020820183516001600160a01b03169052565b60006020830151611cd760408401826001600160a01b03169052565b5060408301518015156060840152506060830151801515608084015250608083015180151560a08401525060a083015180151560c08401525060c083015160e08381019190915283015161010080840191909152830151610120808401919091528301516101408084019190915283015161016080840191909152830151610180808401919091528301516101a0808401919091528301516101c0808401919091528301516102406101e0808501829052611d96610260860184611bf8565b9250808601519050601f19610200818786030181880152611db78584611bf8565b945080880151925050610220818786030181880152611dd68584611bf8565b908801518782039092018488015293509050611df28382611bf8565b9695505050505050565b80358015158114611c6857600080fd5b60008060408385031215611e1f57600080fd5b611e2883611c51565b9150611e3660208401611dfc565b90509250929050565b60008060408385031215611e5257600080fd5b611e2883611dfc565b60008060408385031215611e6e57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611ea457600080fd5b813567ffffffffffffffff80821115611ebf57611ebf611e7d565b604051601f8301601f19908116603f01168101908282118183101715611ee757611ee7611e7d565b81604052838152866020858801011115611f0057600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611f3557600080fd5b833567ffffffffffffffff80821115611f4d57600080fd5b611f5987838801611e93565b94506020860135915080821115611f6f57600080fd5b50611f7c86828701611e93565b925050604084013590509250925092565b600080600060608486031215611fa257600080fd5b505081359360208301359350604090920135919050565b60008060208385031215611fcc57600080fd5b823567ffffffffffffffff80821115611fe457600080fd5b818501915085601f830112611ff857600080fd5b81358181111561200757600080fd5b8660208260051b850101111561201c57600080fd5b60209290920196919550909350505050565b600181811c9082168061204257607f821691505b60208210810361206257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156108a2576108a2612068565b80820281158282048414176108a2576108a2612068565b6000826120c557634e487b7160e01b600052601260045260246000fd5b500490565b601f821115610f2f57600081815260208120601f850160051c810160208610156120f15750805b601f850160051c820191505b81811015612110578281556001016120fd565b505050505050565b815167ffffffffffffffff81111561213257612132611e7d565b61214681612140845461202e565b846120ca565b602080601f83116001811461217b57600084156121635750858301515b600019600386901b1c1916600185901b178555612110565b600085815260208120601f198616915b828110156121aa5788860151825594840194600190910190840161218b565b50858210156121c85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156108a2576108a2612068565b634e487b7160e01b600052603260045260246000fd5b60006001820161221357612213612068565b5060010190565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611df26080830184611bf8565b60006020828403121561225e57600080fd5b815161172e81611bc556fea2646970667358221220dcb80b1ab71caf55383f762940061a64b20bcc9907f9a773e86103882f9181e064736f6c63430008110033";

export class Event__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    eventData: {
      maxParticipants: BigNumberish;
      registrationEnd: BigNumberish;
      start: BigNumberish;
      end: BigNumberish;
      ticketPrice: BigNumberish;
      preSaleTicketPrice: BigNumberish;
      name: string;
      description: string;
      link: string;
      image: string;
    },
    owner: string,
    fee: BigNumberish,
    _tokenUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Event> {
    return super.deploy(
      eventData,
      owner,
      fee,
      _tokenUri,
      overrides || {}
    ) as Promise<Event>;
  }
  getDeployTransaction(
    eventData: {
      maxParticipants: BigNumberish;
      registrationEnd: BigNumberish;
      start: BigNumberish;
      end: BigNumberish;
      ticketPrice: BigNumberish;
      preSaleTicketPrice: BigNumberish;
      name: string;
      description: string;
      link: string;
      image: string;
    },
    owner: string,
    fee: BigNumberish,
    _tokenUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      eventData,
      owner,
      fee,
      _tokenUri,
      overrides || {}
    );
  }
  attach(address: string): Event {
    return super.attach(address) as Event;
  }
  connect(signer: Signer): Event__factory {
    return super.connect(signer) as Event__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EventInterface {
    return new utils.Interface(_abi) as EventInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Event {
    return new Contract(address, _abi, signerOrProvider) as Event;
  }
}
