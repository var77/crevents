/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { IEventCreator, IEventCreatorInterface } from "../IEventCreator";

const _abi = [
  {
    inputs: [],
    name: "tokenUriServer",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x000100000000000200000000030100190000006003300270000000210030019d000000210330019700000001022001900000002f0000c13d000000040230008c000000390000413d000000000101043b0000002301100197000000240110009c000000390000c13d0000000001000416000000000110004c000000390000c13d000000040100008a00000000011000310000002502000041000000000310004c000000000300001900000000030240190000002501100197000000000410004c000000000200a019000000250110009c00000000010300190000000001026019000000000110004c000000390000c13d000000000100041a000000010310019000000001021002700000007f0420018f00000000020460190000001f0420008c00000000040000190000000104002039000000010440018f000000000443004b0000003b0000613d000000290100004100000000001004350000002201000039000000040010043f0000002a0100004100000080000104300000008001000039000000400010043f0000000001000416000000000110004c000000390000c13d00000020010000390000010000100443000001200000044300000022010000410000007f0001042e00000000010000190000008000010430000000800020043f000000000330004c000000450000c13d000001000300008a000000000131016f000000a00010043f000000000120004c000000c001000039000000a001006039000000540000013d000000a0010000390000000000000435000000000320004c000000600000613d000000260100004100000000040000190000000003040019000000000401041a000000a005300039000000000045043500000001011000390000002004300039000000000524004b0000004b0000413d000000c0013000390000001f01100039000000200200008a000000000121016f0000002702100041000000280220009c000000600000813d000000290100004100000000001004350000004101000039000000040010043f0000002a010000410000008000010430000000400010043f00000020020000390000000003210436000000800200043d00000000002304350000004003100039000000000420004c000000700000613d00000000040000190000000005340019000000a006400039000000000606043300000000006504350000002004400039000000000524004b000000690000413d000000000332001900000000000304350000005f02200039000000200300008a000000000232016f0000002103000041000000210420009c0000000002038019000000210410009c000000000103801900000040011002100000006002200210000000000112019f0000007f0001042e0000007e000004320000007f0001042e000000800001043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff0000000200000000000000000000000000000040000001000000000000000000ffffffff00000000000000000000000000000000000000000000000000000000a2df578a000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563ffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff00000000000000804e487b7100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002400000000000000000000000000000000000000000000000000000000000000000000000000000000000000009bff5311ce0b767351d8d8d058977edcc1e10b5d39ee15c82aa1dbe051af6723";

export class IEventCreator__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IEventCreator> {
    return super.deploy(overrides || {}) as Promise<IEventCreator>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): IEventCreator {
    return super.attach(address) as IEventCreator;
  }
  connect(signer: Signer): IEventCreator__factory {
    return super.connect(signer) as IEventCreator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IEventCreatorInterface {
    return new utils.Interface(_abi) as IEventCreatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IEventCreator {
    return new Contract(address, _abi, signerOrProvider) as IEventCreator;
  }
}
